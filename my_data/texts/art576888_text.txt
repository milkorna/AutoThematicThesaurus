TextIT API включает в себя функции проверки орфографии и исправления ошибок, формирования текстовой формы числительных (например, преобразовать “102 рубль” в “сто два рубля”), подсказки следующего слова по ранее введенному тексту, постановки слова в нужную словоформу (число, род, падеж, лицо и время) и другие полезные функции обработки и формирования текста.
Функциональность абсолютно бесплатная (никаких тарифов, подписок и так далее). TextIT API можно просто и быстро подключить и легко использовать.
Мы надеемся, что API будет полезен вам при разработке сайтов, интернет-магазинов, мобильных приложений и чат-ботов.
Функциональность TextIT API.
В настоящий момент доступны следующие функции –.
Correct – выдает возможные варианты исправления ошибки при вводе слова.
Параметры: слово с ошибкой.
Пример: correct(‘есрберо’).
Ответ сервера: серебро, серебром.
Hint – подсказывает следующее слово по введенному ранее тексту.
Параметры: до 30 знаков текста.
Пример: hint(‘Я иду д’).
Ответ сервера: домой, дальше.
Numeral – формирует текстовое представление числа.
Поддерживаются количественные, порядковые и собирательные числительные. Есть склонение по числам и падежам.
Параметры: число и объект. Объект может быть в любом числе и падеже – система сама поставит его в нужную форму.
Пример: numeral(12345,’рубли’).
Ответ сервера: двенадцать тысяч триста сорок пять рублей.
Speller – проверяет текст на наличие ошибок.
Параметры: до 10 000 знаков текста.
Пример: speller(’ Пример тектса’).
Ответ сервера: ошибка в слове ‘тектса’, позиция в тексте 8.
Word – возвращает части слова (корень, приставка и т.д.) и морфологические признаки (часть речи, число, род, падеж и т.д.). Также возвращает лемму (нормальную форму) слова.
Параметры: словоформа.
Пример: тексты.
Ответ сервера: существительное, множественное число, именительный падеж, корень ‘текст’, окончание: ‘ы’.
Для новых слов, которые отсутствуют в словаре, сервер вернет прогноз морфологических признаков слова. Например Тилимилитрямдия – с вероятностью 25% это существительное, женский род, именительный падеж.
SetForm – возвращает исходное слово в нужной словоформе (число, род, падеж и так далее).
Параметры: слово и морфологические признаки.
Пример: слово «машина» поставить в множественное число, родительный падеж.
Ответ сервера: машин.
Cognate – возвращает список однокоренных слов.
Параметры: слово, для которого нужно получить список однокоренных слов.
Пример: экранный.
Ответ сервера: экран, экранирую.
Synonym – возвращает список синонимов.
Параметры: слово, для которого нужно получить список синонимов.
Пример: макет.
Ответ сервера: модель, муляж.
LatToCyr – возвращает текст на кириллице при наборе текста на латинской раскладке клавиатуры.
Параметры: до 10 000 знаков текста.
Пример: Ghbvth ntrcnf.
Ответ сервера: Пример текста.
Подробную документацию и примеры использования вы можете посмотреть на нашем сайте.
Как подключить.
Функциональность реализована в виде микросервиса и доступна посредством HTTP-запроса по адресу: https://textit.ego-ai.tech/api/1.0/data/.
Также, для удобства использования функциональности TextIT API на вашем сайте, мы сделали Javascript-библиотеку.
Все максимально просто – подключите js-библиотеку к вашему сайту (укажите тег <script src="https://textit.ego-ai.tech/js/libs/textit.api.10.js"></script> на html-странице) и вызовите нужную функцию. Регистрация не требуется.
Поддерживается пакетная обработка, то есть вы можете указать в одном запросе вызов нескольких команд.
Подробнее о подключении и использовании TextIT API вы можете прочитать в документации.
Где использовать.
Когда эта функциональность может пригодиться? На каком сайте?!
Да, практически, на любом.
Например, если использовать эту функциональность на сайте vc.ru, то в статьях вместо «102 просмотров» будет отображаться корректное «102 просмотра».
Если у вас есть интернет-магазин, то вы можете написать в форме заказа:
Заказано 5 товаров на сумму две тысячи пятьсот семьдесят рублей.
Или так:
Вы воспользовались услугами двух мастеров на сумму 1 522 рубля.
Вы можете использовать числа до квинтиллиона (10 в 18 степени) – вполне достаточно для среднего интернет-магазина :).
Поддерживаются количественные, порядковые и собирательные числительные и склонение по падежам и числам - на девятой остановке, 36 лет, семи килограммов картошки и так далее.
Если на вашем сайте есть форма ввода текста, например, форма обращения в службу поддержки, то вы можете использовать функции проверки и исправления ошибок в словах и подсказки следующего слова. Это упростит пользователям набор текста, а вы получите текст с меньшим количеством ошибок, что сократит время на его дальнейшую обработку.
Это актуально, в том числе, в свете последних новостей о том, что Гугл планирует отключить сторонние браузеры от своего API проверки орфографии. Таким образом, часть браузеров лишится функциональности проверки орфографии в формах.
Или, например, у вас есть чат-бот, который принимает от пользователя команды в произвольном виде и «на лету» формирует ответ. В этом случае вы можете использовать функции получения информации о введенном пользователем слове, провести лемматизацию текста, подобрать однокоренные слова или синонимы и поставить их в нужную форму для формирования ответа.
Планы на будущее.
В ближайших планах добавить в TextIT API новые команды для обработки текста (разбор предложения по составу, выделение именованных сущностей и так далее). Если у вас есть предложения по функциональности или вам нужны дополнительные команды – пожалуйста, напишите нам. Мы будем благодарны вам за любую идею.
Если вам нужна дополнительная функциональность или вы хотите использовать TextIT API в вашем ПО на специальных условиях, то, пожалуйста, свяжитесь с нами по почте ego.ai.lab@gmail.com или в личных сообщениях на этом сайте.