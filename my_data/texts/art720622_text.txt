Apache NlpCraft - библиотека с открытым исходным кодом, предназначенная для интеграции языкового интерфейса с пользовательскими приложениями. Новая версия 1.0.0 привнесла в проект наиболее существенные изменения за все время его существования.
Основные идеи развития библиотеки были изложены в данной заметке , вкратце напомню их суть:
Предельное упрощение, отказ от всех вспомогательных enterprise возможностей, предельно точная фокусировка продукта.
Максимальная  плагабильность, позволяющая контролировать все элементы обработки текста и как следствие, решающая проблему поддержки мультиязычности..
Текущее API и имплементация - Scala 3.
Базовые концепции.
API представлено двумя основными элементами:
Модель данных — предметно-ориентированный объект, отвечающий за интерпретацию пользовательского ввода.
Клиент — объект, позволяющий обращаться моделью.
Пример использования:
Модель данных.
Определимся с терминологией и шаг за шагом опишем составные части модели.
Картинка, иллюстрирующая вышесказанное.
Ответственность модели:
Модель должна уметь разбивать пользовательский текст на токены.
По входным токенам уметь найти требуемые сущности.
Содержать интенты, опирающиеся на сущности, и колбеки с бизнес логикой.
За первые два пункта отвечают компоненты модели, организованные в NCPipeline.
Компоненты модели.
Создание интентов модели подробно описано в документации и будет продемонстрировано в приведенном ниже примере.
Пример.
Создадим простой пример, модель управления умным домом с поддержкой русского языка, для которого подберем или сами запрограммируем все необходимые компоненты NCPipeline.
Имплементация NCTokenParser.
Представленная ниже реализация парсера для русского языка основана на open source решении от Language Tool.
Компонент формирует список токенов. Как можно заметить, это всего лишь обертка над готовым open source решением длиной в несколько строк.
Имплементации NCTokenEnricher.
Для дальнейшей работы нам понадобятся имплементации NCTokenEnricher , для определения лемм , частей речи и стоп слов.
Компонент добавляет в токен данные о лемме и части речи.
Компонент добавляет в токен признак стоп слова. Для его создания мы снова воспользовались open source решениями от Language Tool и Apache Lucene.
Имплементация NCEntityParser.
На последнем подготовительном шаге создадим простую реализацию NCEntityParser для русского языка, адаптировав имеющийся семантический парсер от Apache NlpCraft. Именно для его более точной точной работы нам и потребовалось в предыдущем разделе создать компоненты, обогащающие токены леммами и признаками стоп слов.
Здесь мы использовали стеммер для русского языка от Apache OpenNLP.
Процесс конфигурации созданного семантического парсера приведен в описании его базового компонента, по ссылке lightswitch_model_ru.yaml можно найти полный пример данной конфигурации.
Обратите внимание на то, что все разработанные нами выше компоненты могут быть использованы для всех проектов, связанных с обработкой русского языка и нам не придется создавать их всякий раз заново. Это была единовременная задача.
Создание модели.
На последнем шаге создадим саму модель.
NCPipeline модели построена на основе созданных нами компонентов. Модель имеет один интент “ls”, колбек которого содержит интеграционную логику управления умным домом. Колбек будет вызван, если разобранный пользовательский запрос содержит одну сущность группы ”act” и одну сущность с идентификатором “ls:loc”. В сработавшем колбеке из входных сущностей извлекаются необходимые данные и вызывается программный код бизнес логики. Подробнее в документации.
Обратите внимание, вы можете использовать любой другой подход для обнаружения необходимых вам сущностей, включая нейросети или иные обученные системы и модели, а не только приведенное в качестве примера решение на основе расширения семантического парсера . Также стоит отметить, что в примере мы задействовали не все существующие компоненты NCPipeline , а лишь необходимые для создания требуемой простейшей модели.
Использование модели.
Этот и прочие примеры доступны на сайте.
Заключение.
Надеюсь данная заметка поможет вам понять основные принципы работы с библиотекой Apache NlpCraft версии 1.0.0 и успешно стартовать с ее помощью ваши собственные проекты.
